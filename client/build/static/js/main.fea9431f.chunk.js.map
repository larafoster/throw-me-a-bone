{"version":3,"sources":["assets/images/tab-logo.svg","components/TopNav.js","components/Footer.js","App.js","index.js"],"names":["TopNav","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","StickyFooter","alt","width","src","require","default","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAAA,OAAe,cAA0B,sC,+KCkC1BA,EAzBA,WACb,OACE,mCACJ,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,6BACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,KAAf,kBACR,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,QAAf,mBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,UAAf,qBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,UAAf,qBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,QAAf,mBACA,cAACI,EAAA,EAAIE,KAAL,CAAUN,KAAK,SAAf,iCCLeO,EAhBM,WACnB,OACE,mCACJ,wBAAQF,UAAU,sBAAlB,SAEA,cAACP,EAAA,EAAD,UACA,qBACoBU,IAAI,MACJH,UAAU,YACVI,MAAM,MACNC,IAAKC,EAAQ,IAAiCC,iBCK5DC,EAAWC,YAAe,CAC9BC,IAAK,aAIDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1BC,EAAQC,aAAaC,QAAQ,YAEnC,MAAO,CACLH,QAAQ,2BACHA,GADE,IAELI,cAAeH,EAAK,iBAAaA,GAAU,SAK3CI,EAAS,IAAIC,IAAa,CAE9BC,KAAMV,EAASW,OAAOd,GACtBe,MAAO,IAAIC,MAcEC,MAXf,WACE,OACE,eAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,UACE,cAAC,EAAD,IADF,QAIE,cAACQ,EAAD,QCzCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fea9431f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tab-logo.f94e4003.svg\";","import React from 'react';\nimport { \n  Container,\n  Navbar,\n  Nav,\n  NavDropdown, \n  \n  } from 'react-bootstrap';\n\nconst TopNav = () => {\n  return (\n    <>\n<Navbar bg=\"light\" expand=\"md\">\n  <Container>\n    <Navbar.Brand href=\"/\">Throw Me A Bone</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n        <Nav.Link href=\"#/\">Home</Nav.Link>\n<Nav.Link href=\"about\">About</Nav.Link>        \n<Nav.Link href=\"profile\">Profile</Nav.Link>        \n<Nav.Link href=\"contact\">Contact</Nav.Link>        \n<Nav.Link href=\"login\">Login</Nav.Link>        \n<Nav.Link href=\"signup\">signup</Nav.Link>        \n\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>\n\n    </>\n  );\n}\n\nexport default TopNav;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nconst StickyFooter = () => {\n  return (\n    <>\n<footer className=\"footer mt-auto py-3\">\n \n<Container>\n<img\n                    alt=\"...\"\n                    className=\"img-fluid\"\n                    width=\"600\"\n                    src={require(\"../assets/images/tab-logo.svg\").default}\n                  /></Container>\n</footer>\n    </>\n  );\n}\nexport default StickyFooter;","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/styles.css';\nimport './assets/css/colors.css';\n\nimport TopNav from './components/TopNav.js';\nimport Footer from './components/Footer.js';\n/* import AppRouter from './Router.js';\n */\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <TopNav />\n     {/*  <AppRouter /> */}\n     Hello\n      <Footer />\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}